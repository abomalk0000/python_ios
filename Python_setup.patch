--- tmp/Python-2.7.13/setup.py	2016-12-17 21:05:07.000000000 +0100
+++ Python-2.7.13/setup.py	2018-12-09 15:27:27.000000000 +0100
@@ -61,7 +61,8 @@
     """
     return ( (path.startswith('/usr/') and not path.startswith('/usr/local'))
                 or path.startswith('/System/')
-                or path.startswith('/Library/') )
+                or path.startswith('/Library/') 
+                or path.startswith('/Applications/') )
 
 def find_file(filename, std_dirs, paths):
     """Searches for the directory where a given file is located,
@@ -104,8 +105,7 @@
 
 def find_library_file(compiler, libname, std_dirs, paths):
     result = compiler.find_library_file(std_dirs + paths, libname)
-    if result is None:
-        return None
+    # if result is None: return None
 
     if host_platform == 'darwin':
         sysroot = macosx_sdk_root()
@@ -619,6 +619,7 @@
         # operator.add() and similar goodies
         exts.append( Extension('operator', ['operator.c']) )
         # Python 3.1 _io library
+        # Not done yet (3.1 ?)
         exts.append( Extension("_io",
             ["_io/bufferedio.c", "_io/bytesio.c", "_io/fileio.c",
              "_io/iobase.c", "_io/_iomodule.c", "_io/stringio.c", "_io/textio.c"],
@@ -810,11 +811,15 @@
         # Detect SSL support for the socket module (via _ssl)
         search_for_ssl_incs_in = [
                               '/usr/local/ssl/include',
-                              '/usr/contrib/ssl/include/'
+                              '/usr/contrib/ssl/include/',
+                              '../blink/Frameworks/openssl.framework/Headers/'
                              ]
         ssl_incs = find_file('openssl/ssl.h', inc_dirs,
                              search_for_ssl_incs_in
                              )
+        ssl_incs = find_file('ssl.h', inc_dirs,
+                             search_for_ssl_incs_in
+                             )
         if ssl_incs is not None:
             krb5_h = find_file('krb5.h', inc_dirs,
                                ['/usr/kerberos/include'])
@@ -822,9 +827,11 @@
                 ssl_incs += krb5_h
         ssl_libs = find_library_file(self.compiler, 'ssl',lib_dirs,
                                      ['/usr/local/ssl/lib',
-                                      '/usr/contrib/ssl/lib/'
+                                      '/usr/contrib/ssl/lib/',
+                                      '../blink/Frameworks/openssl.framework/'
                                      ] )
-
+                                     
+        print "Library for ssl found: ", ssl_libs
         if (ssl_incs is not None and
             ssl_libs is not None):
             exts.append( Extension('_ssl', ['_ssl.c'],
@@ -1412,6 +1419,8 @@
         # You can upgrade zlib to version 1.1.4 yourself by going to
         # http://www.gzip.org/zlib/
         zlib_inc = find_file('zlib.h', [], inc_dirs)
+        print "zlib: found include files: ", zlib_inc
+        print "in Include dirs: ", inc_dirs
         have_zlib = False
         if zlib_inc is not None:
             zlib_h = zlib_inc[0] + '/zlib.h'
@@ -1419,6 +1428,7 @@
             version_req = '"1.1.3"'
             if host_platform == 'darwin' and is_macosx_sdk_path(zlib_h):
                 zlib_h = os.path.join(macosx_sdk_root(), zlib_h[1:])
+            print "zlib: found header file: ", zlib_h
             fp = open(zlib_h)
             while 1:
                 line = fp.readline()
@@ -1427,6 +1437,7 @@
                 if line.startswith('#define ZLIB_VERSION'):
                     version = line.split()[2]
                     break
+            print "zlib: found version: ", version
             if version >= version_req:
                 if (self.compiler.find_library_file(lib_dirs, 'z')):
                     if host_platform == "darwin":
